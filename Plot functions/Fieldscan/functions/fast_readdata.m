function out = fast_readdata(filepath,filename,run,varargin)
% UNTESTED !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
% =======================================================
% Load data from data file generated by Kelvinox-LQM
%
% INPUT:
% filepath:     directory containing data files
% filename:     filename of the form 'YEAR_MN_'
% run:          file number, ie run = [320 321];
% varargin:     field names to load, ie {ImagPart1a,ImagPart2a,Temperature1,...}
% -------------------------------------------------------
%
% OUTPUT:
% out(m):       structure containing data extracted 
%               from the file
%
% =======================================================



curdir = cd;
tot_time = 0;

for m = 1:length(run)
    
    out(m) = blankstructure;
    
    tic
    cd(filepath)

    file = [filename sprintf('%04.0f',run(m)) '.dat'];

    DELIMITER = '\t';
    HEADERLINES = 14;

    % Import the file
    newData1 = importdata(file, DELIMITER, HEADERLINES);
%     newData1 = importdata_test(file);

    % Read the column headers
    headers = deblank(newData1.textdata{end-1});
    machine = deblank(newData1.textdata{end});

    % remove spaces in the headers
    headers(isspace(headers)) = [];
    headers = [',' headers ','];

    machine(isspace(machine)) = [];
    machine = [',' machine ','];

    ind1 = strfind(headers,',');
    ind2 = strfind(machine,',');

    for n = 1:(length(ind1)-1)
        var{n} = headers((ind1(n)+1):(ind1(n+1)-1));
        inst{n} = machine((ind2(n)+1):(ind2(n+1)-1));
    end

    % Output data from data file
    for n = 1:length(var)
        out(m).data.(var{n}) = newData1.data(:,n);    
    end

    out(m).headers = var;
    out(m).instrument = inst;
    out(m).filepath = filepath;
    out(m).filename = file;
    out(m).run = run(m);
    
    
    % Add serial time to the data extraction process
    fid = fopen(file);
    tline = fgets(fid);
    tline = fgets(fid);
    tline = fgets(fid);
    tline = fgets(fid);     % Contains string with a time stamp
    fclose(fid);
    
    t0 = tline(6:end);    
    t0 = datenum(t0, 'dd/mm/yyyy HH:MM:SS');
    out(m).data.SerialTime = t0 + out(m).data.Time/86400;
    out(m).starttime = datestr(t0);  % Time when the file was created
    
    disp(['...loaded ' num2str(length(out(m).data.SerialTime)) ' data '  out(m).filename ' in ' num2str(toc,3) ' s'])
    tot_time = tot_time + toc;
end

disp([' Total time: ' num2str(tot_time/60,3) ' min'])

cd(curdir)
end


function newData = importdata_test(file)
% Function to import AC susceptometer data file
% Attempt to speed up loading of data

fileID = fopen(file);

for n=1:14
    newData.textdata{n,1} = fgetl(fileID);
end

A = fscanf(fileID, '%f');

newData.data = reshape(A',17,length(A)/17)';

fclose(fileID);
end

